// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"gae-backend-web/api/controller"
	"gae-backend-web/bootstrap"
	"gae-backend-web/consume"
	"gae-backend-web/executor"
	"gae-backend-web/internal/tokenutil"
	"gae-backend-web/repository"
	"gae-backend-web/usecase"
	"github.com/google/wire"
)

// Injectors from wire.go:

// InitializeApp init application.
func InitializeApp() (*bootstrap.Application, error) {
	env := bootstrap.NewEnv()
	databases := bootstrap.NewDatabases(env)
	poolsFactory := bootstrap.NewPoolFactory()
	channels := bootstrap.NewChannel()
	client := bootstrap.NewRedisDatabase(env)
	elasticsearchClient := bootstrap.NewEsEngine(env)
	rankRepository := repository.NewRankRepository(client, elasticsearchClient)
	rankUsecase := usecase.NewRankUsecase(rankRepository)
	userRepository := repository.NewUserRepository(elasticsearchClient)
	rpcEngine := bootstrap.NewRpcEngine(env)
	userUsecase := usecase.NewUsecase(userRepository, rpcEngine)
	rankController := controller.NewRankController(rankUsecase, userUsecase)
	relationController := controller.NewRelationController(userUsecase)
	controllers := bootstrap.NewControllers(rankController, relationController)
	cronExecutor := executor.NewCronExecutor()
	consumeExecutor := executor.NewConsumeExecutor()
	bootstrapExecutor := bootstrap.NewExecutors(cronExecutor, consumeExecutor)
	searchEngine := bootstrap.NewSearchEngine(elasticsearchClient)
	application := &bootstrap.Application{
		Env:          env,
		Databases:    databases,
		PoolsFactory: poolsFactory,
		Channels:     channels,
		Controllers:  controllers,
		Executor:     bootstrapExecutor,
		SearchEngine: searchEngine,
	}
	return application, nil
}

// wire.go:

var appSet = wire.NewSet(bootstrap.NewEnv, tokenutil.NewTokenUtil, bootstrap.NewDatabases, bootstrap.NewRedisDatabase, bootstrap.NewMysqlDatabase, bootstrap.NewMongoDatabase, bootstrap.NewPoolFactory, bootstrap.NewChannel, bootstrap.NewControllers, bootstrap.NewExecutors, bootstrap.NewKafkaConf, bootstrap.NewEsEngine, bootstrap.NewSearchEngine, bootstrap.NewRpcEngine, usecase.NewRankUsecase, usecase.NewUsecase, repository.NewRankRepository, repository.NewUserRepository, controller.NewRankController, controller.NewRelationController, consume.NewTalentEvent, executor.NewCronExecutor, executor.NewConsumeExecutor, wire.Struct(new(bootstrap.Application), "*"))
